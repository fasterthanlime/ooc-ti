import tigcc
include all

marioSprite : UChar[] = [
 0x03,0xff,0xc0,0x00,
 0x03,0xff,0xc0,0x00,
 0x0f,0xff,0xff,0x00,
 0x0f,0xff,0xff,0x00,
 0x0f,0xf0,0xd0,0x00,
 0x0f,0xf0,0xd0,0x00,
 0x3c,0xc0,0xcf,0x00,
 0x3c,0xc0,0xc1,0x00,
 0x3c,0xf0,0x30,0xc0,
 0x3c,0xf0,0x30,0xc0,
 0x3f,0x00,0xff,0x00,
 0x3f,0x00,0xff,0x00,
 0x02,0x00,0x04,0x00,
 0x02,0x00,0x3c,0x00,
 0x0f,0xff,0xc0,0x00,
 0x0f,0xff,0xc0,0x00,
 0x3f,0xff,0xff,0x00,
 0x3f,0xff,0xff,0x00,
 0xff,0xff,0xff,0xc0,
 0xff,0xff,0xff,0xc0,
 0x83,0xcf,0x3c,0x40,
 0x83,0xcf,0x3c,0x40,
 0x80,0xff,0xf0,0x40,
 0x80,0xff,0xf0,0x40,
 0x83,0xff,0xfc,0x40,
 0xfb,0xff,0xff,0xc0,
 0x0f,0xf3,0xfc,0x00,
 0x0f,0xf3,0xfc,0x00,
 0x3f,0xc0,0xff,0x00,
 0x3f,0xc0,0xff,0x00,
 0xff,0xc0,0xff,0xc0,
 0xff,0xc0,0xff,0xc0
]

marioLeftSprite: UChar[] = [
 0x00,0xff,0xf0,0x00,
 0x00,0xff,0xf0,0x00,
 0x3f,0xff,0xfc,0x00,
 0x3f,0xff,0xfc,0x00,
 0x02,0xc3,0xfc,0x00,
 0x02,0xc3,0xfc,0x00,
 0x3c,0xc0,0xcf,0x00,
 0x20,0xc0,0xcf,0x00,
 0xc3,0x03,0xcf,0x00,
 0xc3,0x03,0xcf,0x00,
 0x3f,0xc0,0x3f,0x00,
 0x3f,0xc0,0x3f,0x00,
 0x08,0x00,0x10,0x00,
 0x0f,0x00,0x10,0x00,
 0x00,0xff,0xfc,0x00,
 0x00,0xff,0xfc,0x00,
 0x3f,0xff,0xff,0x00,
 0x3f,0xff,0xff,0x00,
 0xff,0xff,0xff,0xc0,
 0xff,0xff,0xff,0xc0,
 0x8f,0x3c,0xf0,0x40,
 0x8f,0x3c,0xf0,0x40,
 0x83,0xff,0xc0,0x40,
 0x83,0xff,0xc0,0x40,
 0x8f,0xff,0xf0,0x40,
 0xff,0xff,0xf7,0xc0,
 0x0f,0xf3,0xfc,0x00,
 0x0f,0xf3,0xfc,0x00,
 0x3f,0xc0,0xff,0x00,
 0x3f,0xc0,0xff,0x00,
 0xff,0xc0,0xff,0xc0,
 0xff,0xc0,0xff,0xc0
]

marioSpriteHeight := 32

/**
 * Mario class
 */
Mario: class {
	
	left := false
	x, y, radius: Short
	
	init: func (=x, =y, =radius) {
		draw()
	}
	
	move: func(.x, .y) {
		draw()
		if(x < this x) left = true
		if(x > this x) left = false
		this x = x
		this y = y
		draw()
	}
	
	draw: func {
		if(left) Sprite32 (x, y, marioSpriteHeight, marioLeftSprite, LCD_MEM, SPRT_XOR)
		else 	 Sprite32 (x, y, marioSpriteHeight, marioSprite, LCD_MEM, SPRT_XOR)
	}
	
}

/**
 * main routine: where all the fun starts =D
 */
_main: func {
	
	DisplayOn()
	ClrScr()
	
	randomize()
	radius := 16.0
	x = radius * 3, y = LCD_HEIGHT, velx = 0.2, vely = 0 : Float
	
	mario := Mario new(x, y, radius)
	
	accy := 0.1
	
	OSInitBetweenKeyDelay(5)
	OSInitKeyInitDelay(15)
	
	running := true
	
	while (running) {
		
		vely += accy
		velx *= 0.9
		
		x += velx
		y += vely
		
		if(x < 0) {
			velx = -velx
			x = 0
		}
		
		if(x > LCD_WIDTH - radius * 2) {
			velx = -velx
			x = LCD_WIDTH - radius * 2
		}
		
		if(y < 0) {
			vely = -vely * 0.2
			y = 0
		}
		
		if(y > LCD_HEIGHT - radius * 2) {
			vely = -vely * 0.2
			y = LCD_HEIGHT - radius * 2
		}
		
		mario move(x, y)
	
		while (kbhit()) {
			code := ngetchx()
			if(code == KEY_UP) {
				if(y > LCD_HEIGHT - radius * 3) {
					vely = -2
				}
			}if(code == KEY_DOWN) {
				vely += 0.15
			} else if(code == KEY_LEFT) {
				velx = -0.6
			} else if(code == KEY_RIGHT) {
				velx = 0.6
			}/* else {
				if(_keytest(RR_ESC)) {
					running = false
				}
			}*/
		}
		
		for(j in 1..2300) {}
		
	}
	
}
